"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
from . import util
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = config("DEBUG_MODE", cast=bool)

#use local db file for testing (with debug mode off), turn off in production
TEST_WITH_LOCAL_DB = config("USE_LOCAL_DB", cast=bool)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0%31bd)ih*a7bzlbmrf3m!lyxrp)9se!%*n(%(#9v!zg#ggk7t' if DEBUG else config("SECRET_KEY")

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'server',
    "djstripe",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    #values for local testing, change depending on local environment
    'default': {
        'ENGINE': 'server.rotating_key_db_engine',
        'NAME': "postgres",
        'USER': "postgres",
        'PASSWORD': "Cosgnanas,1",
        'HOST': "localhost",
        'PORT': "5432"
    }
} if DEBUG or TEST_WITH_LOCAL_DB else {
    'default': {
        'ENGINE': 'server.rotating_key_db_engine',
        'NAME': config("DB_NAME"),
        'USER': "default",
        'PASSWORD': "default",
        'HOST': config("DB_HOST"),
        'PORT': config("DB_PORT")
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = config("STATIC_ROOT")
STATICFILES_DIRS = [os.path.join(BASE_DIR, "server/static")]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TEST_WITHOUT_AI = False #if set to true, does not recreate database and generates dummy summary to save on API calls, set to false in production

# ─── sessions ────────────────────────────────────────────────────────────
SESSION_ENGINE = "django.contrib.sessions.backends.db"

SESSION_COOKIE_AGE = 60 * 60 * 24 * 7   # keep session 1 week (optional)


X_FRAME_OPTIONS = 'SAMEORIGIN'

#login page
LOGIN_URL = '/login'

#HSTS settings

SECURE_HSTS_SECONDS = 60 * 60 * 24 * 14
SECURE_HSTS_PRELOAD = True
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# App URLs you’ll render in templates
BILLING_SUCCESS_URL = "billing_success"
BILLING_CANCEL_URL  = "billing_cancel"
ACCOUNT_URL_NAME    = "home"  # where to send users back after portal

# STRIPE


# Toggle this with your environment; False in dev (Test mode), True in prod
STRIPE_LIVE_MODE = False

# Stripe API keys
STRIPE_TEST_SECRET_KEY = config("STRIPE_SECRET_KEY", default="")
STRIPE_LIVE_SECRET_KEY = config("STRIPE_LIVE_SECRET_KEY", default="")
STRIPE_SECRET_KEY = STRIPE_LIVE_SECRET_KEY if STRIPE_LIVE_MODE else STRIPE_TEST_SECRET_KEY

STRIPE_TEST_PUBLISHABLE_KEY = config("STRIPE_PUBLISHABLE_KEY", default="")
STRIPE_LIVE_PUBLISHABLE_KEY = config("STRIPE_LIVE_PUBLISHABLE_KEY", default="")
STRIPE_PUBLISHABLE_KEY = STRIPE_LIVE_PUBLISHABLE_KEY if STRIPE_LIVE_MODE else STRIPE_TEST_PUBLISHABLE_KEY

# dj-stripe settings
DJSTRIPE_WEBHOOK_SECRET = config("STRIPE_WEBHOOK_SECRET", default="")
DJSTRIPE_USE_NATIVE_JSONFIELD = True
DJSTRIPE_SUBSCRIBER_MODEL = "auth.User"  # map Stripe Customer -> Django User

# dj-stripe config
DJSTRIPE_FOREIGN_KEY_TO_FIELD = "id"   # <— required for new installs
DJSTRIPE_USE_NATIVE_JSONFIELD = True
DJSTRIPE_SUBSCRIBER_MODEL = "auth.User"
DJSTRIPE_WEBHOOK_SECRET = os.getenv("STRIPE_WEBHOOK_SECRET", "")
